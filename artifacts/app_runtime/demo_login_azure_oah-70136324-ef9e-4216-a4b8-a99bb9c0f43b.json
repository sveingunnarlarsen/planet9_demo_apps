{
	"id": "70136324-ef9e-4216-a4b8-a99bb9c0f43b",
	"createdAt": "2019-08-29T09:22:46.000Z",
	"updatedAt": "2019-11-26T12:13:05.000Z",
	"createdBy": "ole-andre.haugen@neptune-software.com",
	"changedBy": "ole-andre.haugen@neptune-software.com",
	"objects": [
		{
			"fieldNo": "c54e9b8a-9ac5-41ea-b175-0164a6639860",
			"fieldName": "oShell",
			"fieldParent": 0,
			"fieldType": "sap.m.Shell",
			"script": "",
			"request": [],
			"response": [],
			"attributes": [],
			"data": [
				{
					"fieldNo": "c8d0314d-2c75-4c2c-b782-b5961f04577a",
					"fieldName": "oApp",
					"fieldParent": "c54e9b8a-9ac5-41ea-b175-0164a6639860",
					"fieldType": "sap.m.App",
					"script": "",
					"request": [],
					"response": [],
					"attributes": [],
					"data": [
						{
							"fieldNo": "e7cabdfb-5055-47d9-b819-91079d75930d",
							"fieldName": "oPage",
							"fieldParent": "c8d0314d-2c75-4c2c-b782-b5961f04577a",
							"fieldType": "sap.m.Page",
							"bindingType": "u",
							"script": "",
							"request": [],
							"response": [],
							"attributes": [
								{
									"attribute": "title",
									"grouping": "Properties",
									"value": "Azure AD - Authentication",
									"script": "",
									"translation": []
								}
							],
							"data": [
								{
									"fieldNo": "320a84e8-f633-4388-b77c-98d981e16fba",
									"fieldName": "formLogin",
									"fieldParent": "e7cabdfb-5055-47d9-b819-91079d75930d",
									"fieldType": "sap.ui.layout.form.SimpleForm",
									"script": "",
									"request": [],
									"response": [],
									"attributes": [
										{
											"attribute": "layout",
											"grouping": "Properties",
											"value": "ResponsiveGridLayout",
											"script": "",
											"translation": []
										},
										{
											"attribute": "labelSpanM",
											"grouping": "Properties",
											"value": "12",
											"script": "",
											"translation": []
										},
										{
											"attribute": "labelSpanL",
											"grouping": "Properties",
											"value": "12",
											"script": "",
											"translation": []
										}
									],
									"data": [
										{
											"fieldNo": "6f8a7062-a3e0-43a3-8366-085532dcda2c",
											"fieldName": "lblformLoginusername",
											"fieldParent": "320a84e8-f633-4388-b77c-98d981e16fba",
											"fieldType": "sap.m.Label",
											"script": "",
											"request": [],
											"response": [],
											"attributes": [
												{
													"attribute": "text",
													"grouping": "Properties",
													"value": "Username",
													"script": "",
													"translation": []
												}
											],
											"data": []
										},
										{
											"fieldNo": "327c2aa6-97b9-4d7a-983f-bb4c1a12a93a",
											"fieldName": "informLoginusername",
											"fieldParent": "320a84e8-f633-4388-b77c-98d981e16fba",
											"fieldType": "sap.m.Input",
											"script": "",
											"request": [],
											"response": [],
											"attributes": [],
											"data": []
										}
									]
								},
								{
									"fieldNo": "32fad062-c93d-4059-85ce-bf8d9e8ed6e3",
									"fieldName": "oBarContent",
									"fieldParent": "e7cabdfb-5055-47d9-b819-91079d75930d",
									"fieldType": "sap.m.Bar",
									"script": "",
									"request": [],
									"response": [],
									"attributes": [
										{
											"attribute": "position",
											"grouping": "Parent",
											"value": "addContent",
											"script": "",
											"translation": []
										}
									],
									"data": [
										{
											"fieldNo": "c1762915-da80-4301-9268-736488a833ac",
											"fieldName": "Left",
											"fieldParent": "32fad062-c93d-4059-85ce-bf8d9e8ed6e3",
											"fieldType": "neptune.BarContent",
											"script": "",
											"request": [],
											"response": [],
											"attributes": [
												{
													"attribute": "position",
													"grouping": "Parent",
													"value": "ContentLeft",
													"script": "",
													"translation": []
												}
											],
											"data": [
												{
													"fieldNo": "0736570f-fae0-46f0-d649-51335be2a1ca",
													"fieldName": "oButtonLogin",
													"fieldParent": "c1762915-da80-4301-9268-736488a833ac",
													"fieldType": "sap.m.Button",
													"script": "",
													"request": [],
													"response": [],
													"attributes": [
														{
															"attribute": "text",
															"grouping": "Properties",
															"value": "Login ",
															"script": "",
															"translation": []
														},
														{
															"attribute": "press",
															"grouping": "Events",
															"value": "AppCacheLogonAzure.Logon();",
															"script": "AppCacheLogonAzure.Logon();",
															"translation": []
														}
													],
													"data": []
												},
												{
													"fieldNo": "d0576645-a9be-4599-8562-e46435017659",
													"fieldName": "oButtonToken",
													"fieldParent": "c1762915-da80-4301-9268-736488a833ac",
													"fieldType": "sap.m.Button",
													"script": "",
													"request": [],
													"response": [],
													"attributes": [
														{
															"attribute": "text",
															"grouping": "Properties",
															"value": "Access Token",
															"script": "",
															"translation": []
														},
														{
															"attribute": "press",
															"grouping": "Events",
															"value": "AppCacheLogonAzure.Relog();",
															"script": "AppCacheLogonAzure.Relog();",
															"translation": []
														}
													],
													"data": []
												},
												{
													"fieldNo": "a6140839-8d7d-4513-afae-01f291a501b0",
													"fieldName": "oButtonLogout",
													"fieldParent": "c1762915-da80-4301-9268-736488a833ac",
													"fieldType": "sap.m.Button",
													"script": "",
													"request": [],
													"response": [],
													"attributes": [
														{
															"attribute": "text",
															"grouping": "Properties",
															"value": "Logout",
															"script": "",
															"translation": []
														},
														{
															"attribute": "press",
															"grouping": "Events",
															"value": "AppCacheLogonAzure.Logoff();",
															"script": "AppCacheLogonAzure.Logoff();",
															"translation": []
														}
													],
													"data": []
												}
											]
										}
									]
								},
								{
									"fieldNo": "67e394d1-74c7-4070-be54-f21124ccd66b",
									"fieldName": "oBarFooter",
									"fieldParent": "e7cabdfb-5055-47d9-b819-91079d75930d",
									"fieldType": "sap.m.Bar",
									"script": "",
									"request": [],
									"response": [],
									"attributes": [
										{
											"attribute": "position",
											"grouping": "Parent",
											"value": "setFooter",
											"script": "",
											"translation": []
										}
									],
									"data": [
										{
											"fieldNo": "0b3ee099-d4e9-429a-c719-85aebcf51132",
											"fieldName": "Left",
											"fieldParent": "67e394d1-74c7-4070-be54-f21124ccd66b",
											"fieldType": "neptune.BarContent",
											"script": "",
											"request": [],
											"response": [],
											"attributes": [
												{
													"attribute": "position",
													"grouping": "Parent",
													"value": "ContentLeft",
													"script": "",
													"translation": []
												}
											],
											"data": [
												{
													"fieldNo": "af4ec823-65ba-4429-b18c-c27493f73292",
													"fieldName": "isDesktop",
													"fieldParent": "0b3ee099-d4e9-429a-c719-85aebcf51132",
													"fieldType": "sap.m.CheckBox",
													"script": "",
													"request": [],
													"response": [],
													"attributes": [
														{
															"attribute": "text",
															"grouping": "Properties",
															"value": "Desktop",
															"script": "",
															"translation": []
														},
														{
															"attribute": "selected",
															"grouping": "Properties",
															"value": "true",
															"script": "",
															"translation": []
														}
													],
													"data": []
												}
											]
										}
									]
								}
							]
						}
					]
				}
			]
		},
		{
			"fieldNo": 99999,
			"data": [
				{
					"fieldNo": "95400565-2cfa-4194-abaa-aa910e022454",
					"fieldName": "Azure",
					"fieldParent": 99999,
					"fieldType": "neptune.Script",
					"script": [
						"==OBJECT STRING==",
						"var AppCacheLogonAzure = {",
						"",
						"    state: null,",
						"    options: {},",
						"    fullUri: null,",
						"    redirectUri: \"/sap/saml2/sp/acs/100\",",
						"",
						"    Logon: function(loginHint) {",
						"",
						"        this.options = this._getLogonData();",
						"        this.state = Date.now();",
						"",
						"        var logonWin = this._openPopup(this._loginUrl(loginHint));",
						"",
						"        if (!isCordova()) {",
						"",
						"            if (location.protocol === \"file:\") {",
						"                sap.m.MessageToast.show(\"Testing Azure AD from file is not allowed due to CSRF issues. Please test in mobile app\");",
						"                return;",
						"            }",
						"",
						"            // Browser",
						"            this._waitForPopupDesktop(logonWin, function(url) {",
						"",
						"                authResponse = AppCacheLogonAzure._getHashParams(url);",
						"",
						"                // Get response",
						"                if (authResponse) {",
						"",
						"                    if (AppCache.enableLogging) {",
						"                        console.log(\"Azure Logon: Got code\");",
						"                        console.log(authResponse);",
						"                    }",
						"",
						"                    // Prevent cross-site request forgery attacks",
						"                    if (parseInt(authResponse.state) !== AppCacheLogonAzure.state) {",
						"                        sap.m.MessageToast.show(\"Cross-site request forgery detected\");",
						"                        return;",
						"                    }",
						"",
						"                    // Request Access/Refresh Tokens ",
						"                    AppCacheLogonAzure._getToken(authResponse);",
						"",
						"                } else {",
						"                    console.log(\"No token response, or window closed manually\");",
						"                }",
						"",
						"            }.bind(this));",
						"",
						"        } else {",
						"",
						"            // Mobile",
						"            logonWin.addEventListener('loadstop', function() {",
						"",
						"                (function() {",
						"                    function waitForToken() {",
						"",
						"                        logonWin.executeScript({",
						"                                code: \"location.search\"",
						"                            },",
						"                            function(values) {",
						"",
						"                                var token = values[0] || null;",
						"",
						"                                if (token && token.indexOf(\"code=\") > -1) {",
						"",
						"                                    logonWin.close();",
						"",
						"                                    authResponse = AppCacheLogonAzure._getHashParams(token);",
						"",
						"                                    if (AppCache.enableLogging) console.log(\"Azure Logon: Got code\");",
						"",
						"                                    // Prevent cross-site request forgery attacks",
						"                                    if (parseInt(authResponse.state) !== AppCacheLogonAzure.state) {",
						"                                        sap.m.MessageToast.show(\"Cross-site request forgery detected\");",
						"                                        return;",
						"                                    }",
						"",
						"                                    // Request Access/Refresh Tokens ",
						"                                    AppCacheLogonAzure._getToken(authResponse);",
						"",
						"                                } else {",
						"                                    setTimeout(waitForToken, 100);",
						"                                }",
						"                            });",
						"",
						"                    }",
						"                    waitForToken();",
						"                })();",
						"",
						"            });",
						"",
						"        }",
						"    },",
						"",
						"    Relog: function(refreshToken, process) {",
						"        this.options = this._getLogonData();",
						"        this._refreshToken(refreshToken, process);",
						"    },",
						"",
						"    Logoff: function() {",
						"",
						"        // Logout Planet 9",
						"        if (navigator.onLine && AppCache.isOffline === false) {",
						"            $.ajax({",
						"                type: \"POST\",",
						"                contentType: \"application/json\",",
						"                url: this.fullUri + \"/user/logout\",",
						"                success: function(data) {",
						"                    AppCache.clearCookies();",
						"                    if (AppCache.enableLogging) console.log(\"Azure Logon: Successfully logged out\");",
						"                },",
						"                error: function(result, status) {",
						"                    AppCache.clearCookies();",
						"                    if (AppCache.enableLogging) console.log(\"Azure Logon: Successfully logged out, in offline mode\");",
						"                }",
						"            });",
						"        } else {",
						"            AppCache.clearCookies();",
						"        }",
						"",
						"    },",
						"",
						"    Init: function() {",
						"",
						"        $(document).ajaxError(function(event, request, settings) {",
						"",
						"            switch (request.status) {",
						"",
						"                case 400:",
						"",
						"                    // Error messages ",
						"                    if (request && request.responseJSON) {",
						"                        console.log(request.responseJSON);",
						"                        var log = request.responseJSON.error_description.split(\"\\n\");",
						"                        if (log && log.length) {",
						"                            sap.m.MessageToast.show(log[0]);",
						"                        } else {",
						"                            sap.m.MessageToast.show(request.responseJSON.error_description);",
						"                        }",
						"                    }",
						"                    break;",
						"",
						"                case 401:",
						"",
						"                    // Not authorized",
						"                    if (AppCache.isRestricted) {",
						"                        this.Login();",
						"                    } else {",
						"                        this.Relog();",
						"                    }",
						"                    break;",
						"",
						"                default:",
						"                    //execute code default",
						"                    break;",
						"",
						"            }",
						"",
						"        }.bind(this));",
						"    },",
						"",
						"    _getHashParams: function(token) {",
						"",
						"        if (token.indexOf(\"?\") > -1) token = token.split(\"?\")[1];",
						"",
						"        var params = token.replace(/^(#|\\?)/, '');",
						"        var hashParams = {};",
						"        var e,",
						"            a = /\\+/g,",
						"            r = /([^&;=]+)=?([^&;]*)/g,",
						"            d = function(s) {",
						"                return decodeURIComponent(s.replace(a, \" \"));",
						"            };",
						"        while (e = r.exec(params))",
						"            hashParams[d(e[1])] = d(e[2]);",
						"        return hashParams;",
						"    },",
						"",
						"    _getLogonData: function() {",
						"",
						"        var logonData = {",
						"            tenantId: \"8fdb51da-e45d-423f-ae33-cf92118d5311\",",
						"            clientID: \"09523d00-18c8-4285-a07f-3b9457244b72\",",
						"            scope: \"user.read profile openid offline_access\",",
						"            type: \"azure-bearer\",",
						"            path: \"planet9-ad-bearer\",",
						"            client_secret: \"m9/iJgR7/9I8MfJ[cSPBaIwnGiHsDQ=t\",",
						"        };",
						"",
						"        if (!this.fullUri) this.fullUri = \"https://s4dev.neptune-software.com\";",
						"",
						"        // if (AppCache.userInfo && AppCache.userInfo.logonData && AppCache.userInfo.logonData.id) {",
						"        //     logonData = AppCache.getLogonTypeInfo(AppCache.userInfo.logonData.id);",
						"        // } else {",
						"        //     logonData = AppCache.getLogonTypeInfo(AppCache_loginTypes.getSelectedKey());",
						"        // }",
						"",
						"        return logonData;",
						"    },",
						"",
						"    _authUrl: function(endPoint) {",
						"        return \"https://login.microsoftonline.com/\" + AppCacheLogonAzure.options.tenantId + \"/oauth2/v2.0/\" + endPoint + \"?\";",
						"    },",
						"",
						"    _loginUrl: function(loginHint) {",
						"        var data = {",
						"            client_id: AppCacheLogonAzure.options.clientID,",
						"            redirect_uri: this.fullUri + AppCacheLogonAzure.redirectUri,",
						"            scope: AppCacheLogonAzure.options.scope,",
						"            nonce: ModelData.genID(),",
						"            state: this.state,",
						"            prompt: \"select_account\",",
						"            response_type: \"code\"",
						"        };",
						"",
						"        if (loginHint) data.login_hint = loginHint;",
						"",
						"        console.log(data);",
						"",
						"        return this._authUrl(\"authorize\") + $.param(data);",
						"    },",
						"",
						"    _logoutUrl: function() {",
						"",
						"        var data = {",
						"            post_logout_redirect_uri: this.fullUri + AppCacheLogonAzure.redirectUri",
						"        };",
						"",
						"        return this._authUrl(\"logout\") + $.param(data);",
						"    },",
						"",
						"    _onTokenReady: function(data) {",
						"",
						"        if (!data.expires_on) {",
						"            data.expires_on = new Date();",
						"            data.expires_on.setSeconds(data.expires_on.getSeconds() + data.expires_in);",
						"            data.expires_on = data.expires_on.getTime();",
						"        }",
						"",
						"        AppCache.userInfo.azureToken = data;",
						"        AppCache.userInfo.azureUser = AppCacheLogonAzure._parseJwt(AppCache.userInfo.azureToken.id_token);",
						"",
						"        if (AppCache.enableLogging) {",
						"            console.log(\"Azure Logon: User Data\");",
						"            console.log(AppCache.userInfo.azureUser);",
						"        }",
						"",
						"        return data;",
						"    },",
						"",
						"    _getToken: function(response) {",
						"        var url = this._authUrl(\"token\");",
						"        var data = {",
						"            client_id: AppCacheLogonAzure.options.clientID,",
						"            redirect_uri: this.fullUri + AppCacheLogonAzure.redirectUri,",
						"            code: response.code,",
						"            client_secret: AppCacheLogonAzure.options.client_secret,",
						"            grant_type: \"authorization_code\",",
						"        };",
						"",
						"        return $.ajax({",
						"            type: \"POST\",",
						"            url: \"https://planet9dev.neptune-software.com:8081/user/logon/\" + this.options.type + \"/\" + this.options.path + \"/\" + encodeURIComponent(url),",
						"            contentType: \"application/x-www-form-urlencoded\",",
						"            data: data,",
						"            success: function(data) {",
						"",
						"                if (!data && !data.refresh_token) {",
						"                    sap.m.MessageToast.show(\"Error getting refresh_token from Azure\");",
						"                    if (AppCache.enableLogging) console.error(\"Azure Logon: Error getting refresh_token\");",
						"                    return;",
						"                }",
						"",
						"                if (AppCache.enableLogging) {",
						"                    console.log(\"Azure Logon: Got tokens\");",
						"                    console.log(data);",
						"                }",
						"",
						"                AppCache.Auth = data.refresh_token;",
						"",
						"                AppCacheLogonAzure._onTokenReady(data);",
						"                AppCacheLogonAzure._loginP9(data.id_token);",
						"            },",
						"            error: function(result, status) {",
						"                sap.m.MessageToast.show(\"Error getting token from Azure AD\");",
						"            }",
						"",
						"        });",
						"",
						"    },",
						"",
						"    _refreshToken: function(refreshToken, process) {",
						"",
						"        if (!process) process = \"pin\";",
						"",
						"        var url = this._authUrl(\"token\");",
						"",
						"        var data = {",
						"            client_id: AppCacheLogonAzure.options.clientID,",
						"            refresh_token: refreshToken,",
						"            grant_type: \"refresh_token\",",
						"        };",
						"",
						"        // Get Tokens from Azure",
						"        return $.ajax({",
						"            type: \"POST\",",
						"            url: this.fullUri + \"/user/logon/\" + this.options.type + \"/\" + this.options.path + \"/\" + encodeURIComponent(url),",
						"            contentType: \"application/x-www-form-urlencoded\",",
						"            data: data,",
						"            success: function(data) {",
						"                if (AppCache.enableLogging) console.log(\"Azure Logon: Got refresh_token: \" + data.refresh_token);",
						"                AppCacheLogonAzure._onTokenReady(data);",
						"                return AppCacheLogonAzure._loginP9(data.id_token, process);",
						"            },",
						"            error: function(result, status) {",
						"                if (AppCache.enableLogging) console.log(\"Error getting token from Azure AD\");",
						"            }",
						"        });",
						"",
						"",
						"    },",
						"",
						"    _loginP9: function(idToken, process) {",
						"",
						"        return $.ajax({",
						"            type: \"POST\",",
						"            url: AppCache.Url + \"/user/logon/\" + AppCacheLogonAzure.options.type + \"/\" + AppCacheLogonAzure.options.path,",
						"            headers: {",
						"                \"Authorization\": \"Bearer \" + idToken,",
						"            },",
						"            success: function(data) {",
						"",
						"                switch (process) {",
						"",
						"                    case \"pin\":",
						"                        if (AppCache.enableLogging) console.log(\"Azure Logon: Successfully logged on to P9. Starting process: \" + process);",
						"",
						"                        // Clear",
						"                        NumPad.numPasscode = 0;",
						"                        NumPad.Clear();",
						"                        NumPad.Verify = true;",
						"",
						"                        // Start App",
						"                        AppCache.Encrypted = \"\";",
						"                        AppCache.Update();",
						"",
						"                        break;",
						"",
						"                    case \"refresh\":",
						"                        if (AppCache.enableLogging) console.log(\"Azure Logon: Successfully logged on to P9. Starting process: \" + process);",
						"                        break;",
						"",
						"                    default:",
						"                        if (AppCache.enableLogging) console.log(\"Azure Logon: Successfully logged on to P9. Starting process: Get User Info\");",
						"                        AppCache.getUserInfo();",
						"                        break;",
						"",
						"                }",
						"",
						"            },",
						"            error: function(result, status) {",
						"                if (AppCache.enableLogging) console.error(\"Azure Logon: Error logging on P9\");",
						"                if (result.status === 0) {",
						"                    onOffline();",
						"                }",
						"            }",
						"        });",
						"    },",
						"",
						"    _waitForPopupDesktop: function(popupWin, onClose) {",
						"        var url = \"\";",
						"        var winCheckTimer = setInterval(function() {",
						"",
						"            try {",
						"                url = popupWin.location.href || \"\";",
						"            } catch (e) {",
						"",
						"            }",
						"",
						"            if (url.indexOf(\"code=\") > -1 || popupWin.closed) {",
						"                clearInterval(winCheckTimer);",
						"                popupWin.close();",
						"                onClose(url);",
						"            }",
						"        }, 100);",
						"    },",
						"",
						"    _parseJwt: function(token) {",
						"        try {",
						"            return JSON.parse(atob(token.split('.')[1]));",
						"        } catch (e) {",
						"            return null;",
						"        }",
						"    },",
						"",
						"    _openPopup: function(url, width, height) {",
						"        width = width || 800;",
						"        height = height || 600;",
						"        var winLeft = (window.innerWidth - width) / 2;",
						"        var winTop = (window.innerHeight - height) / 2;",
						"",
						"        return window.open(url, \"_blank\", \"location=no,width=\" + width + \",height=\" + height + \",left=\" + winLeft + \",top=\" + winTop);",
						"    }",
						"",
						"};"
					],
					"request": [],
					"response": [],
					"attributes": [],
					"data": []
				},
				{
					"fieldNo": "8afc173f-b9f4-418d-a8b3-c4da6a718c55",
					"fieldName": "Init",
					"fieldParent": 99999,
					"fieldType": "neptune.Script",
					"script": [
						"==OBJECT STRING==",
						"var authResponse = \"\";",
						"",
						"var AppCache = {",
						"    enableLogging: true",
						"};",
						"",
						"function isCordova() {",
						"    if (window.hasOwnProperty(\"cordova\") || typeof(cordova) == \"object\") {",
						"        return true;",
						"    } else {",
						"        return false;",
						"    }",
						"}",
						"",
						"// var options = {",
						"//     client_id: \"ca21abbe-b065-47a3-b38a-e0e2271e0144\",",
						"//     client_secret: \"3HDfKO/X@HtoGB8waOdw*wSL1U.NhF0h\",",
						"//     tenantId: \"8fdb51da-e45d-423f-ae33-cf92118d5311\",",
						"//     scope: \"openid profile offline_access\",",
						"//     enableTrace: true",
						"// }",
						"",
						"",
						"",
						"AppCacheLogonAzure.Init();",
						"",
						"",
						"window.onerror = function(msg, url, linenumber) {",
						"    alert('Error message: ' + msg + '\\nURL: ' + url + '\\nLine Number: ' + linenumber);",
						"    return true;",
						"}"
					],
					"request": [],
					"response": [],
					"attributes": [],
					"data": []
				}
			]
		},
		{
			"fieldNo": 99998,
			"data": []
		}
	],
	"ver": "19.11.26.1313",
	"application": "demo_login_azure_oah",
	"title": "",
	"description": "",
	"enableFileStorage": false,
	"enableManifest": false,
	"enableStylesheet": false,
	"enableObfuscate": false,
	"onlyRunLaunchpad": false,
	"disabled": null,
	"loadLaunchpadCode": null,
	"loadApplicationCode": null,
	"appType": "",
	"ui5_m": true,
	"ui5_f": false,
	"ui5_table": false,
	"ui5_tnt": false,
	"ui5_uxap": false,
	"ui5_chart": false,
	"ui5_theme": "sap_fiori_3",
	"ui5_version": "1.65CDN",
	"ui5_language": null,
	"cus_theme": "",
	"css": "",
	"header": "",
	"manifest": "",
	"globalScript": "",
	"deleted": false,
	"libHighchart": false,
	"libHighmap": false,
	"publicAccess": false,
	"ui5_bootstrap": null,
	"apis": []
}